{"version":3,"sources":["component/UserMenu/UserMenu.module.css","redux/contacts/contact-actions.js","redux/contacts/contact-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contact-reducer.js","component/Container/Container.js","component/AppBar/AppBar.module.css","component/Container/Container.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","component/Navigation.js","component/UserMenu/default-avatar.png","component/UserMenu/UserMenu.js","component/AuthNav.js","component/AppBar/AppBar.js","component/PrivateRoute.js","component/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","contactsOperations","fetchContact","dispatch","a","axios","get","data","addContact","name","number","contact","post","then","catch","error","deleteContact","contactId","delete","getFilter","state","contacts","filter","getAllContacts","items","contactsSelectors","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","getError","createReducer","_","payload","id","loading","response","combineReducers","Container","children","className","styles","container","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","logIn","operations","logOut","fetchCurrentUser","thunkAPI","getState","persistedToken","auth","rejectWithValue","authSelectors","getIsLoggedIn","isLoggedIn","getUserName","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","pending","rejected","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","useSelector","to","exact","style","activeStyle","UserMenu","useDispatch","avatar","defaultAvatar","src","alt","width","type","onClick","AuthNav","AppBar","header","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fffe85dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3A8Qx\",\"avatar\":\"UserMenu_avatar__1QBwy\",\"name\":\"UserMenu_name__3ginI\"};","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n","import axios from 'axios';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n} from './contact-actions';\r\n\r\nconst fetchContact = () => async dispatch => {\r\n    dispatch(fetchContactRequest());\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error));\r\n    }\r\n}\r\n\r\n// export const fetchContact = () => dispatch => {\r\n//     dispatch(fetchContactRequest());\r\n//     axios.get('/contacts')\r\n//         .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n//         .catch(error => dispatch(fetchContactError(error)))\r\n// }\r\n\r\n\r\nconst addContact = ({ name, number } ) => dispatch => {\r\n    const contact = { name, number };\r\n    dispatch(addContactRequest());\r\n    axios.post(`/contacts`, contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)),\r\n        )\r\n        .catch(error => dispatch(addContactError(error)))\r\n}\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios.delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(deleteContactSuccess(contactId)))\r\n        .catch(error => dispatch(deleteContactError(error)));\r\n}\r\n\r\nconst contactsOperations = {\r\n    fetchContact,\r\n    addContact,\r\n    deleteContact,\r\n};\r\n\r\nexport default contactsOperations;","import { createSelector } from 'reselect';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\nconst getError = state => state.contacts.error;\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilteredContacts = createSelector(\r\n    [getAllContacts, getFilter], (contacts,filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        \r\n        return contacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n})\r\n\r\nconst contactsSelectors = {\r\n    getFilter,\r\n    getAllContacts,\r\n    getFilteredContacts,\r\n    getError,\r\n}\r\n\r\nexport default contactsSelectors;","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    filterContact,\r\n} from './contact-actions';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) =>\r\n        [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [filterContact]: (_, { payload }) => payload,\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContactRequest]: () => null,\r\n    [fetchContactError]: (_, { payload }) => payload.response.data,\r\n    [addContactRequest]: () => null,\r\n    [addContactError]: (_, { payload }) => payload.response.data,\r\n    [deleteContactRequest]: () => null,\r\n    [deleteContactError]: (_, { payload }) => payload.response.data,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n    error,\r\n})","import styles from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3Rc1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3WIcA\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// axios.defaults.baseURL = 'https://lpj-tasker.herokuapp.com';\r\naxios.defaults.baseURL='https://connections-api.herokuapp.com'\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body: { name, email, password }\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = createAsyncThunk('auth/register', async credentials => {   //отправка формы с RegisterView(handleSubmit)\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials );  //отправляем на бек \r\n    token.set(data.token);\r\n    return data;  //возвращаем результат ответа с бека\r\n  } catch (error) {\r\n    //  Добавить обработку ошибки error.message\r\n    // throw error;\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/login\r\n * body: { email, password }\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    //  Добавить обработку ошибки error.message\r\n    //  throw error;\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers: Authorization: Bearer token\r\n * После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    //  Добавить обработку ошибки error.message\r\n  }\r\n});\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      // console.log('Токена нет, уходим из fetchCurrentUser');\r\n      return thunkAPI.rejectWithValue();\r\n      // return state;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      // Добавить обработку ошибки error.message\r\n       \r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n    getIsLoggedIn,\r\n    getUserName,\r\n    getIsFetchingCurrent,\r\n};\r\n\r\nexport default authSelectors;","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\n//начальное состояние и редюсер ничего не обрабатывает\r\nconst initialState = {\r\n  user: { name: null, email: null },  //тут будет состояние с бека\r\n  token: null,  //токен нужекн чтобы скрывать приватную коллекцию\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    },\r\n  });\r\n\r\nexport default authSlice.reducer;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Home\r\n    </NavLink>\r\n\r\n    { isLoggedIn && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n      Contacts\r\n    </NavLink>\r\n    )} \r\n  </nav>\r\n  )};\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport styles from './UserMenu.module.css'\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\r\n      <span className={styles.name}>Wellcome, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Выйти\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport styles from './AppBar.module.css'\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * 1. Он должен повторять API Route\r\n *  2. Он должен рендерить Route\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на redirectTo\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\r\n * - В противном случае рендерит компонент\r\n *\r\n */\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}","// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { Switch, Route } from 'react-router-dom';\n// import AppBar from './component/AppBar/AppBar';\n// import ContactsView from './views/ContactsView';\n// import HomeView from './views/HomeView';\n// import RegisterView from './views/RegisterView';\n// import LoginView from './views/LoginView';\n// import Container from './component/Container'\n// import { authOperations } from './redux/auth';\n// // import './App.css'\n\n// export default function App() {\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     dispatch(authOperations.fetchCurrentUser());\n//   }, [dispatch]);\n\n//   return (\n//     <Container>\n//       <AppBar />\n\n//       <Switch>\n//         <Route exact path=\"/\" component={HomeView} />\n//         <Route path=\"/register\" component={RegisterView} />\n//         <Route path=\"/login\" component={LoginView} />\n//         <Route path=\"/contacts\" component={ContactsView} />\n//       </Switch>\n//     </Container>\n//   );\n// }\n\nimport { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch} from 'react-router-dom';\nimport AppBar from './component/AppBar/AppBar';\nimport Container from './component/Container';\nimport PrivateRoute from './component/PrivateRoute';\nimport PublicRoute from './component/PublicRoute';\nimport { authOperations, authSelectors } from './redux/auth';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n  // console.log(isFetchingCurrentUser);\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    \n    !isFetchingCurrentUser && \n        <Container>\n          <AppBar />\n          <Switch>\n            <Suspense fallback={<p>Загружаем...</p>}>\n               <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n                <LoginView />\n              </PublicRoute>\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n    </Container>\n  );\n}\n\n","// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import contactReducer from './contacts/contact-reducer';\r\n// import { authReducer } from './auth';\r\n// import {\r\n//     persistStore,\r\n//     persistReducer,\r\n//     FLUSH,\r\n//     REHYDRATE,\r\n//     PAUSE,\r\n//     PERSIST,\r\n//     PURGE,\r\n//     REGISTER\r\n// } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\n// // import persistReducer from 'redux-persist/es/persistReducer';\r\n\r\n// const middleware = [...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//     },\r\n// }),\r\n// ];\r\n\r\n// const authPersistConfig = {\r\n//     key: 'auth',\r\n//     storage,\r\n//     whitelist: ['token'],\r\n// };\r\n\r\n// export const store = configureStore({\r\n//     reducer: {\r\n//         contacts: contactReducer,\r\n//         auth: persistReducer(authPersistConfig, authReducer),\r\n//     },\r\n//     middleware,\r\n//     devTools: process.env.NODE_ENV === 'development',\r\n// })\r\n\r\n// export const persistor = persistStore(store);\r\n\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer }  from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { persistor, store } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}